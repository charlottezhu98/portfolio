{"version":3,"sources":["components/Hero.js","pages/HomePage.js","components/Content.js","pages/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["Hero","props","Jumbotron","className","Container","fluid","Row","Col","md","sm","title","subTitle","text","HomePage","Content","children","ContactPage","handleChange","event","target","value","type","checked","name","setState","handleSubmit","preventDefault","console","log","disabled","Axios","post","state","then","res","data","success","emailSent","catch","err","email","message","this","Form","onSubmit","Group","Label","htmlFor","Control","id","onChange","as","rows","Button","variant","React","Component","App","headerLinks","path","home","about","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4ed980dd.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction Hero(props) {\n\n    return(\n        <Jumbotron className=\"bg-transparent jumbotron-fluid p-0\">\n            <Container fluid={true}>\n                <Row className=\"justify-content-center py-5\">\n                    <Col md={8} sm={12}>\n                        { props.title && <h1 className=\"display-1 font-weight-bolder\">{props.title}</h1> }\n                        { props.subTitle && <h3 className=\"display-4 font-weight-light\">{props.subTitle}</h3> }\n                        { props.text && <h3 className=\"lead font-weight-light\">{props.text}</h3> }\n                    </Col>\n                </Row>\n            </Container>\n        </Jumbotron>\n    );\n\n}\n\n\nexport default Hero;","import React from 'react';\nimport Hero from '../components/Hero';\n\nfunction HomePage(props) {\n\n    return(\n        <Hero title={props.title} subTitle={props.subTitle} text={props.text}/>\n    );\n\n}\n\nexport default HomePage;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction Content(props) {\n\n    return(\n        <Container fluid={true}>\n            <Row className=\"justify-content-center\">\n                <Col md={8}>\n                    {props.children}\n                </Col>\n            </Row>\n        </Container>\n    );\n\n}\n\nexport default Content;","import React from 'react';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\nimport Axios from 'axios';\n\nclass ContactPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            disabled: false,\n            emailSent: null,\n        }\n    }\n\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        console.log(event.target);\n\n        this.setState({\n            disabled: true\n        });\n\n        Axios.post('http://localhost:3030/api/email', this.state)\n            .then(res => {\n                if(res.data.success) {\n                    this.setState({\n                        disabled: false,\n                        emailSent: true\n                    });\n                } else {\n                    this.setState({\n                        disabled: false,\n                        emailSent: false\n                    });\n                }\n            })\n            .catch(err => {\n                console.log(err);\n\n                this.setState({\n                    disabled: false,\n                    emailSent: false\n                });\n            })\n\n    }\n\n\n    render() {\n        return(\n            <div>\n                <Hero title={this.props.title} />\n\n                <Content>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\n                            <Form.Control id=\"full-name\" name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} />\n                        </Form.Group>\n\n\n                        <Form.Group>\n                            <Form.Label htmlFor=\"email\">Email</Form.Label>\n                            <Form.Control id=\"email\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleChange} />\n                        </Form.Group>\n\n\n                        <Form.Group>\n                            <Form.Label htmlFor=\"message\">Message</Form.Label>\n                            <Form.Control id=\"message\" name=\"message\" as=\"textarea\"rows=\"3\" value={this.state.message} onChange={this.handleChange} />\n                        </Form.Group>\n\n\n                        <Button className=\"d-inline-block\" variant=\"primary\" type=\"submit\" disabled={this.state.disabled}>\n                            Send\n                        </Button>\n\n\n                        {this.state.emailSent === true && <p className=\"d-inline success-msg\">Email Sent</p>}\n                        {this.state.emailSent === false && <p className=\"d-inline err-msg\">Email Not Sent</p>}\n                    </Form>\n                </Content>\n            </div>\n        );\n    }\n\n}\n\nexport default ContactPage;","import React from 'react';\nimport {BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ContactPage from './pages/ContactPage';\n\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'Garrett Love',\n      headerLinks: [\n        { title: 'Home', path: '/' },\n        { title: 'About', path: '/about' },\n        { title: 'Contact', path: '/contact' }\n      ],\n      home: {\n        title: 'Be Relentless',\n        subTitle: 'Projects the make a difference',\n        text: 'Checkout my projects below'\n      },\n      about: {\n        title: 'About Me'\n      },\n      contact: {\n        title: 'Let\\'s Talk'\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <Container className=\"p-0\" fluid={true}>\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n            <Navbar.Brand>Charlotte</Navbar.Brand>\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\"/>\n            <Navbar.Collapse>\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n                <Link className=\"nav-link\" to=\"contact\">Contact</Link>\n              </Nav>\n\n            </Navbar.Collapse>\n          </Navbar>\n          <Route path=\"/\" exact render={() => <HomePage title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text}/>}/>\n          <Route path=\"/about\" render={() => <AboutPage title={this.state.about.title} />} />\n          <Route path=\"/contact\" render={() => <ContactPage title={this.state.contact.title} />} />\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}